// Generated by jextract

package com.newton;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$42 {

    static final FunctionDescriptor NewtonCollisionDataPointer$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonCollisionDataPointer$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCollisionDataPointer",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$42.NewtonCollisionDataPointer$FUNC, false
    );
    static final FunctionDescriptor NewtonCreateCompoundCollision$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle NewtonCreateCompoundCollision$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCreateCompoundCollision",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$42.NewtonCreateCompoundCollision$FUNC, false
    );
    static final FunctionDescriptor NewtonCreateCompoundCollisionFromMesh$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_FLOAT,
        C_INT,
        C_INT
    );
    static final MethodHandle NewtonCreateCompoundCollisionFromMesh$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCreateCompoundCollisionFromMesh",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;FII)Ljdk/incubator/foreign/MemoryAddress;",
        constants$42.NewtonCreateCompoundCollisionFromMesh$FUNC, false
    );
    static final FunctionDescriptor NewtonCompoundCollisionBeginAddRemove$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle NewtonCompoundCollisionBeginAddRemove$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCompoundCollisionBeginAddRemove",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$42.NewtonCompoundCollisionBeginAddRemove$FUNC, false
    );
    static final FunctionDescriptor NewtonCompoundCollisionAddSubCollision$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonCompoundCollisionAddSubCollision$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCompoundCollisionAddSubCollision",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$42.NewtonCompoundCollisionAddSubCollision$FUNC, false
    );
    static final FunctionDescriptor NewtonCompoundCollisionRemoveSubCollision$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonCompoundCollisionRemoveSubCollision$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCompoundCollisionRemoveSubCollision",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$42.NewtonCompoundCollisionRemoveSubCollision$FUNC, false
    );
}



// Generated by jextract

package com.newton;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$89 {

    static final FunctionDescriptor NewtonMeshCalculateVertexNormals$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_FLOAT
    );
    static final MethodHandle NewtonMeshCalculateVertexNormals$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonMeshCalculateVertexNormals",
        "(Ljdk/incubator/foreign/MemoryAddress;F)V",
        constants$89.NewtonMeshCalculateVertexNormals$FUNC, false
    );
    static final FunctionDescriptor NewtonMeshApplySphericalMapping$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle NewtonMeshApplySphericalMapping$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonMeshApplySphericalMapping",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$89.NewtonMeshApplySphericalMapping$FUNC, false
    );
    static final FunctionDescriptor NewtonMeshApplyCylindricalMapping$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle NewtonMeshApplyCylindricalMapping$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonMeshApplyCylindricalMapping",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)V",
        constants$89.NewtonMeshApplyCylindricalMapping$FUNC, false
    );
    static final FunctionDescriptor NewtonMeshApplyBoxMapping$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle NewtonMeshApplyBoxMapping$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonMeshApplyBoxMapping",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)V",
        constants$89.NewtonMeshApplyBoxMapping$FUNC, false
    );
    static final FunctionDescriptor NewtonMeshApplyAngleBasedMapping$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonMeshApplyAngleBasedMapping$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonMeshApplyAngleBasedMapping",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$89.NewtonMeshApplyAngleBasedMapping$FUNC, false
    );
    static final FunctionDescriptor NewtonCreateTetrahedraLinearBlendSkinWeightsChannel$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonCreateTetrahedraLinearBlendSkinWeightsChannel$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonCreateTetrahedraLinearBlendSkinWeightsChannel",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$89.NewtonCreateTetrahedraLinearBlendSkinWeightsChannel$FUNC, false
    );
}



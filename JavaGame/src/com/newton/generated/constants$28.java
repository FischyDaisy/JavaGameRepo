// Generated by jextract

package com.newton.generated;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$28 {

    static final FunctionDescriptor NewtonWorldGetUserData$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldGetUserData$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldGetUserData",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$28.NewtonWorldGetUserData$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldAddListener$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldAddListener$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldAddListener",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$28.NewtonWorldAddListener$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldGetListener$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldGetListener$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldGetListener",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$28.NewtonWorldGetListener$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldListenerSetDebugCallback$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldListenerSetDebugCallback$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldListenerSetDebugCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.NewtonWorldListenerSetDebugCallback$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldListenerSetPostStepCallback$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldListenerSetPostStepCallback$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldListenerSetPostStepCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.NewtonWorldListenerSetPostStepCallback$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldListenerSetPreUpdateCallback$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldListenerSetPreUpdateCallback$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldListenerSetPreUpdateCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.NewtonWorldListenerSetPreUpdateCallback$FUNC, false
    );
}



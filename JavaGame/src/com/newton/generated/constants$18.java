// Generated by jextract

package com.newton.generated;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$18 {

    static final FunctionDescriptor NewtonJobTask$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle NewtonJobTask$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$18.NewtonJobTask$FUNC, false
    );
    static final FunctionDescriptor NewtonReportProgress$FUNC = FunctionDescriptor.of(C_INT,
        C_FLOAT,
        C_POINTER
    );
    static final MethodHandle NewtonReportProgress$MH = RuntimeHelper.downcallHandle(
        "(FLjdk/incubator/foreign/MemoryAddress;)I",
        constants$18.NewtonReportProgress$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldGetVersion$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle NewtonWorldGetVersion$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldGetVersion",
        "([Ljava/lang/Object;)I",
        constants$18.NewtonWorldGetVersion$FUNC, true
    );
    static final FunctionDescriptor NewtonWorldFloatSize$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle NewtonWorldFloatSize$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonWorldFloatSize",
        "([Ljava/lang/Object;)I",
        constants$18.NewtonWorldFloatSize$FUNC, true
    );
}



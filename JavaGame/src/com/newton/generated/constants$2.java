// Generated by jextract

package com.newton.generated;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$2 {

    static final FunctionDescriptor NewtonWorldListenerDebugCallback$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldListenerDebugCallback$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$2.NewtonWorldListenerDebugCallback$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldListenerBodyDestroyCallback$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonWorldListenerBodyDestroyCallback$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$2.NewtonWorldListenerBodyDestroyCallback$FUNC, false
    );
    static final FunctionDescriptor NewtonWorldUpdateListenerCallback$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_FLOAT
    );
    static final MethodHandle NewtonWorldUpdateListenerCallback$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;F)V",
        constants$2.NewtonWorldUpdateListenerCallback$FUNC, false
    );
}



// Generated by jextract

package com.newton;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$51 {

    static final FunctionDescriptor NewtonTreeCollisionAddFace$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle NewtonTreeCollisionAddFace$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonTreeCollisionAddFace",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;II)V",
        constants$51.NewtonTreeCollisionAddFace$FUNC, false
    );
    static final FunctionDescriptor NewtonTreeCollisionEndBuild$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle NewtonTreeCollisionEndBuild$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonTreeCollisionEndBuild",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$51.NewtonTreeCollisionEndBuild$FUNC, false
    );
    static final FunctionDescriptor NewtonTreeCollisionGetFaceAttribute$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle NewtonTreeCollisionGetFaceAttribute$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonTreeCollisionGetFaceAttribute",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$51.NewtonTreeCollisionGetFaceAttribute$FUNC, false
    );
    static final FunctionDescriptor NewtonTreeCollisionSetFaceAttribute$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle NewtonTreeCollisionSetFaceAttribute$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonTreeCollisionSetFaceAttribute",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)V",
        constants$51.NewtonTreeCollisionSetFaceAttribute$FUNC, false
    );
    static final FunctionDescriptor NewtonTreeCollisionForEachFace$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NewtonTreeCollisionForEachFace$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonTreeCollisionForEachFace",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$51.NewtonTreeCollisionForEachFace$FUNC, false
    );
    static final FunctionDescriptor NewtonTreeCollisionGetVertexListTriangleListInAABB$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle NewtonTreeCollisionGetVertexListTriangleListInAABB$MH = RuntimeHelper.downcallHandle(
        Newton_h.LIBRARIES, "NewtonTreeCollisionGetVertexListTriangleListInAABB",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$51.NewtonTreeCollisionGetVertexListTriangleListInAABB$FUNC, false
    );
}


